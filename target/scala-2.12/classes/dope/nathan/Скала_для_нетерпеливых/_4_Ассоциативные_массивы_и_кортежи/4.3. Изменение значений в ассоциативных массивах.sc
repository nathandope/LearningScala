// Изменяемые ассоциативные массивы
val scoresNotFinal = scala.collection.mutable.Map("Alice" -> 10, "Bob" -> 3, "Cindy" -> 8)

// изменять значения ключей
//scores("Bob") = 10 // не сработало

// ...() = добавлять новые ассоциации с помощью
// scores("Fred") = 7 // не сработало

// += - добавлять несколько новых ассоциаций
scoresNotFinal += ("Bob" -> 10, "Fred" -> 7)

// -= - удалить ключ - значение
scoresNotFinal -= "Alice"

// ничего не происходит
scoresNotFinal -= "A"


// Неизменяемый ассоциативный массив
val scoresFinal1 = Map("Alice" -> 10, "Bob" -> 3, "Cindy" -> 8)

// невозможно изменить, но можно создать новый
//scoresFinal1 += ("Sam" -> 500) // невозможно
val newScores = scoresFinal1 + ("Bob" -> 10, "Fred" -> 7)

// или работать с var-переменной
var scoresFinal2 = Map("Alice" -> 10, "Bob" -> 3, "Cindy" -> 8)

// вместо сохранения в новом занчении (работая с val) можно
// создать новый объект, а (ссылку) переменную var scoresFinal2 оставить
scoresFinal2 = scoresFinal2 + ("Bob" -> 10, "Fred" -> 7)

// удаление ключа с созданием нового ассоциативного массива
// scoresFinal2 -= "Alice" // пока непонятно почему работает (возвращает Unit)(создает новый массив?) TODO
scoresFinal2 = scoresFinal2 - "Alice"

// по-факту все 3 операции о создании нового
// неизменяемого ассоциативного массива
// разница в переменных (ссылках)
